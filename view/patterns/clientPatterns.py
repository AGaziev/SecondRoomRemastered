from aiogram import types
import datetime

info = '–ì–ª–∞–≤–Ω—ã–π - @biruytskovskynf\n' \
       '–ï—Å–ª–∏ –∑–∞–º–µ—Ç–∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞, –ø–∏—à–∏—Ç–µ - @vcdddk'

toStart = '–í–≤–µ–¥–∏—Ç–µ /start –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω—é'


def getCategoryMenu(categoryInfo: dict, noveltyInfo: dict):
    newEmoji = 'üÜï'
    text = '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–µ—â–µ–π –≤ –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏\n\n'
    for category in categoryInfo.keys():
        text += f'{category} - {categoryInfo[category]}{f" {newEmoji}" if category in noveltyInfo else ""}\n'
    text += '\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é'
    return text


def getSubcategoryMenu(subcategoryInfo: dict, noveltyInfo: dict):
    start = '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–µ—â–µ–π –≤ –∫–∞–∂–¥–æ–π –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏\n\n'
    text = ''
    for subcategory in subcategoryInfo.keys():
        if subcategoryInfo[subcategory] != 0:
            text += f'{subcategory} - {subcategoryInfo[subcategory]}{" üÜï" if subcategory in noveltyInfo else ""}\n'

    if text == '':
        text = '–ù–µ—Ç –≤–µ—â–µ–π –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏'
    else:
        text += '\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é'
    return start + text


def createMediaGroup(cloth, current, total):
    media = types.MediaGroup()
    for i in range(len(cloth['photo'])):
        media.attach_photo(
            types.InputMediaPhoto(cloth['photo'][i],
                                  caption=getClothInfoForBot(cloth, current, total) if i == 0 else '',
                                  parse_mode=types.ParseMode.HTML))
    return media


def getClothInfoForBot(data: dict, current, total):
    if getDataDifference(data['date']) < 3:
        dateText = ' üÜï'
    else:
        dateText = ''
    userMention = f"<a href=\"tg://user?id={data['userId']}\">–°–Æ–î–ê</a>"
    name = (f'\"{data["name"]}\"' if data["name"] != 'None' else '')
    return f'{current}/{total}\n' \
           f'{data["subCategory"]}{dateText}\n' \
           f'{data["brand"]} {name}\n\n' \
           f'{data["price"]}\n\n' \
           f'–°–æ—Å—Ç–æ—è–Ω–∏–µ: {data["condition"]}\n' \
           f'–†–∞–∑–º–µ—Ä: {data["size"]}\n' \
           f'–ó–∞ –ø–æ–∫—É–ø–∫–æ–π {userMention}'


def getDataDifference(date):
    return (datetime.datetime.now() - date).days